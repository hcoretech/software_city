"use strict";(()=>{var e={};e.id=723,e.ids=[723],e.modules={8013:e=>{e.exports=require("mongodb")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9027:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>b,patchFetch:()=>S,requestAsyncStorage:()=>h,routeModule:()=>f,serverHooks:()=>x,staticGenerationAsyncStorage:()=>v});var a={};r.r(a),r.d(a,{POST:()=>g});var o=r(9303),n=r(8716),s=r(670),i=r(4330);r(166);var p=r(7070),u=r(8013);let c=require("fs");var d=r(618);let l=new u.MongoClient(process.env.MONGODB_URL).db(),m=new u.GridFSBucket(l,{bucketName:"upload",chunkSizeBytes:262144});async function g(e,t){let r=(await e.formData()).get("title").toString();try{let e=m.find({filename:r}),t=(await e.toArray())[0].filename,a=m.openDownloadStreamByName(t).pipe((0,c.createWriteStream)(`./public/${t}`)).path.slice(8);return console.log(a),p.NextResponse.json({data:a},{status:200})}catch(e){return p.NextResponse.json({message:"fail to connect to database"},{status:501})}}(0,d.h)([g]),(0,i.j)("4615cb9ddf26f21b06f7c98479e30bc37c8a6340",g);let f=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/getImage/route",pathname:"/api/getImage",filename:"route",bundlePath:"app/api/getImage/route"},resolvedPagePath:"C:\\Users\\Hcore\\Desktop\\project\\app\\api\\getImage\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:h,staticGenerationAsyncStorage:v,serverHooks:x}=f,b="/api/getImage/route";function S(){return(0,s.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:v})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[293,972],()=>r(9027));module.exports=a})();